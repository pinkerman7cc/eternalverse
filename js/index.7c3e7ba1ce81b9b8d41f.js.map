{"version":3,"file":"js/index.7c3e7ba1ce81b9b8d41f.js","mappings":"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","sources":["webpack://capcap-frontend/./src/components/Lazyload/index.tsx","webpack://capcap-frontend/./src/routers/mobile.tsx","webpack://capcap-frontend/./src/routers/pc.tsx","webpack://capcap-frontend/./src/App.tsx","webpack://capcap-frontend/./src/components/Locale/index.tsx","webpack://capcap-frontend/./src/utils/locale.ts","webpack://capcap-frontend/./src/store/reducers/locale.ts","webpack://capcap-frontend/./src/store/reducers/index.ts","webpack://capcap-frontend/./src/store/index.ts","webpack://capcap-frontend/./src/index.tsx","webpack://capcap-frontend/./src/store/action-types.ts","webpack://capcap-frontend/./src/types/index.ts","webpack://capcap-frontend/./src/utils/useNavAnch.ts","webpack://capcap-frontend/./src/utils/index.ts"],"sourcesContent":["import * as React from \"react\";\r\nimport Loadable from \"react-loadable\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 200px;\r\n  line-height: 200px;\r\n  text-align: center;\r\n`;\r\n\r\nconst loadingComponent = () => (\r\n  <Wrapper>\r\n    {/* <Spin /> */}\r\n  </Wrapper>\r\n);\r\n\r\nexport default (loader, loading = loadingComponent) => {\r\n  return Loadable({\r\n    loader,\r\n    loading,\r\n  });\r\n};\r\n","// mobile\r\nimport { RouterType } from \"./types\";\r\nimport LazyLoad from \"src/components/Lazyload\";\r\ntype PackageRouter = Array<RouterType>;\r\n\r\n// 移动端会将describe字段渲染到document.title中\r\nconst mobileRouter: PackageRouter = [\r\n  {\r\n    path: \"/h5\",\r\n    catch: false,\r\n    describe: \"主页\",\r\n    components: LazyLoad(() => import(/* webpackChunkName: \"mobileRouter\" */ \"src/containers/Mobile\")),\r\n  },\r\n];\r\n\r\nexport default mobileRouter;\r\n","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-05-01 17:20:14\r\n */\r\n// mobile\r\nimport { RouterType } from \"./types\";\r\nimport LazyLoad from \"src/components/Lazyload\";\r\ntype PackageRouter = Array<RouterType>;\r\n\r\n// 移动端会将describe字段渲染到document.title中\r\nconst pcRouter: PackageRouter = [\r\n  {\r\n    path: \"/pc\",\r\n    catch: false,\r\n    describe: \"主页\",\r\n    components: LazyLoad(() => import(/* webpackChunkName: \"pcRouter\" */ \"src/containers/PC\")),\r\n  },\r\n];\r\n\r\nexport default pcRouter;\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch, useHistory } from \"react-router-dom\";\r\nimport { isMobile } from \"./utils\";\r\nimport AppContainer from \"./components/AppContainer\";\r\nimport H5Container from \"./components/H5Container\";\r\nimport { mobile as mobileRouter, pc as pcRouter } from \"./routers\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      {mobileRouter.map(item => (\r\n        <Route key={item.path} path={item.path} component={item.components} />\r\n      ))}\r\n\r\n      {pcRouter.map(item => {\r\n        return <Route key={item.path} path={item.path} component={item.components} />;\r\n      })}\r\n\r\n      {/* 判断是移动端还是PC进入 */}\r\n      {isMobile() ? <Redirect to=\"/h5\" /> : <Redirect to=\"/pc\" />}\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getLangLocale } from \"src/utils/locale\";\r\nimport { RootState } from \"src/types\";\r\n\r\nconst Locale: React.FC = props => {\r\n    const locale = useSelector<RootState, string>(state => {\r\n        // console.log('Intl-state:', state);\r\n        return state.localeState.locale;\r\n    });\r\n    // console.log('locale', locale);\r\n    const intl = getLangLocale(locale);\r\n    return (\r\n        <IntlProvider messages={intl} locale=\"en\">\r\n            {props.children}\r\n        </IntlProvider>\r\n    );\r\n};\r\n\r\nexport default Locale;","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2021-12-29 17:25:10\r\n */\r\nimport intlEN from 'src/locales/en_US.json';\r\nimport intlZH from 'src/locales/zh_CN.json';\r\nimport intlZH_TW from 'src/locales/zh_TW.json';\r\nimport { LanguageType } from 'src/types';\r\n\r\nexport function getLangLocale(locale: string) {\r\n    switch (locale) {\r\n        case LanguageType.ZH:\r\n            return intlZH;\r\n        case LanguageType.ZH_TW:\r\n            return intlZH_TW;\r\n        default:\r\n            return intlEN;\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-01-02 15:09:03\r\n */\r\nimport ACTIONTYPE from \"../action-types\";\r\nimport { LanguageType, LocaleState, Action } from 'src/types';\r\n\r\nconst initState: LocaleState = {\r\n    locale: LanguageType.EN\r\n}\r\nexport default function (state: LocaleState = initState, action:Action<LanguageType>): LocaleState{\r\n    switch(action.type) {\r\n        case ACTIONTYPE.SWITCHLANGUAGE: \r\n            return { ...state, locale: action.payload };\r\n        default:\r\n            return { ...state}\r\n    }\r\n}\r\n\r\n","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-01-01 16:53:20\r\n */\r\nimport { combineReducers } from 'redux'\r\nimport localeState from './locale';\r\n\r\nconst rootReducer = combineReducers({\r\n    localeState,\r\n});\r\n\r\nexport default rootReducer;","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-01-02 14:46:57\r\n */\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from \"react\";\r\n// plugins\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n// components\r\nimport App from \"./App\";\r\nimport Locale from \"src/components/Locale\";\r\nimport store from 'src/store';\r\n\r\n// styles\r\nimport \"./app.less\";\r\n\r\nconsole.log(\"process.env.NODE_ENV :>> \", process.env.NODE_ENV);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Locale>\r\n      <BrowserRouter basename=\"/\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Locale>\r\n  </Provider>,\r\n  document.getElementById(\"app\") as HTMLElement\r\n);\r\n","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-01-02 14:54:58\r\n */\r\n\r\nenum ACTIONTYPE {\r\n    SWITCHLANGUAGE = 'SWITCHLANGUAGE',\r\n}\r\n\r\nexport default ACTIONTYPE;","/*\r\nimport { langList } from 'src/types';\r\n * @Description: 此文件存放公共类型\r\n * @Author: duanwensheng\r\n * @Date: 2022-01-04 10:55:48\r\n */\r\n// export type CurrencyType = 'USD' | 'CNY';\r\n// export type LanguageType = 'en' | 'zh';\r\n\r\n\r\nexport enum LanguageType {\r\n  EN = \"EN\",\r\n  ZH = \"ZH\",\r\n  ZH_TW=\"ZH_TW\"\r\n}\r\n\r\n// 语言\r\nexport const langList = {\r\n  [LanguageType.EN]: 'English',\r\n  [LanguageType.ZH]: '简体中文',\r\n  [LanguageType.ZH_TW]: '繁體中文'\r\n};\r\n\r\nexport const navList = {\r\n  'home': 'HOME',\r\n  'tiandi': 'Tiandi Bank',\r\n  'roadmap': 'Roadmap',\r\n  'team': 'TEAM',\r\n  'FAQ': 'FAQ'\r\n};\r\nexport interface LocaleState {\r\n  locale: LanguageType;\r\n}\r\n\r\nexport interface Action<T> {\r\n  type: string;\r\n  payload: T;\r\n}\r\n\r\nexport interface RootState {\r\n    localeState: LocaleState;\r\n}\r\n\r\n\r\n","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-05-18 13:22:52\r\n */\r\nimport { useEffect, useState } from 'react';\r\nimport { navList } from 'src/types';\r\n\r\nexport const useNavAnch = (options = {}) => { \r\n    let [anchKey, setAnchKey] = useState<string>('home');\r\n\r\n    useEffect(() => { \r\n        // 监听页面导航是否进入页面可是区域\r\n        const anchKeys = Object.keys(navList);\r\n        const intersectionObserver = new IntersectionObserver(changes => { \r\n            for (let change of changes) { \r\n                const target = change;\r\n                const bundingRect = target.boundingClientRect;\r\n                const eleId = target.target.id;\r\n\r\n                // 目标元素从视口下方进入\r\n                if (target.isIntersecting && bundingRect.top > 0) { \r\n                    setAnchKey(eleId)\r\n                }\r\n\r\n                // 目标元素从视口下方退出\r\n                if (!target.isIntersecting && bundingRect.top > 0) { \r\n                    const index = anchKeys.indexOf(eleId);\r\n                    setAnchKey(anchKeys[index - 1]);\r\n                }\r\n            }\r\n        }, {...options})\r\n\r\n        // 监听每个导航快元素\r\n        anchKeys.map(key => intersectionObserver.observe(document.querySelector(`#${key}`)));\r\n        \r\n        return (() => { \r\n            // 页面卸载接触监听\r\n            intersectionObserver.disconnect();\r\n        })\r\n    }, []);\r\n\r\n    anchKey = document.documentElement.scrollTop === 0 ? 'home' : anchKey;\r\n    return [anchKey];\r\n}","/*\r\n * @Description: \r\n * @Author: duanwensheng\r\n * @Date: 2022-05-01 17:20:14\r\n */\r\nexport { useNavAnch } from './useNavAnch';\r\n\r\nexport const isMobile = () => {\r\n  const sUserAgent = navigator.userAgent.toLowerCase();\r\n  const isMobile = /ipad|iphone|midp|rv:1.2.3.4|ucweb|android|windows ce|windows mobile/.test(sUserAgent);\r\n  return isMobile;\r\n};\r\n\r\n// 新页面打开链接\r\nexport const openNewPage = (link?: string) => {\r\n  link && window.open(link);\r\n};\r\n\r\nexport const refreshPage = () => { \r\n  window.location.href = `${window.location.protocol}//${window.location.host}`;\r\n}\r\n\r\n// 解决h5 滚动穿透问题\r\nexport const bodyFixed = () => { \r\n  const oBody = document.body;\r\n  oBody.style.overflow = 'hidden';\r\n}\r\n\r\nexport const bodyLoose = () => {\r\n  const oBody = document.body;\r\n  oBody.style.overflow = 'auto';\r\n}\r\n\r\n"],"names":["Wrapper","loadingComponent","loader","loading","path","catch","describe","components","mobile","item","key","component","pc","to","props","intl","locale","getLangLocale","state","localeState","messages","children","initState","action","type","payload","store","basename","document","getElementById","ACTIONTYPE","LanguageType","langList","EN","ZH","ZH_TW","navList","useNavAnch","options","useState","anchKey","setAnchKey","useEffect","anchKeys","Object","keys","intersectionObserver","IntersectionObserver","changes","target","bundingRect","boundingClientRect","eleId","id","isIntersecting","top","index","indexOf","map","observe","querySelector","disconnect","documentElement","scrollTop","isMobile","sUserAgent","navigator","userAgent","toLowerCase","test","openNewPage","link","window","open","refreshPage","location","href","protocol","host","bodyFixed","body","style","overflow","bodyLoose"],"sourceRoot":""}